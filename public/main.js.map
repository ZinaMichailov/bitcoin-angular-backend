{"version":3,"sources":["./src/app/services/bitcoin.service.ts","./src/app/cmps/contact-preview/contact-preview.component.ts","./src/app/cmps/contact-preview/contact-preview.component.html","./src/app/services/contact.service.ts","./src/app/services/http.service.js","./src/app/pages/contact-details/contact-details.component.ts","./src/app/pages/contact-details/contact-details.component.html","./src/app/services/storage.service.js","./src/environments/environment.ts","./src/app/pages/statistic-page/statistic-page.component.ts","./src/app/pages/statistic-page/statistic-page.component.html","./src/app/pages/contact-edit/contact-edit.component.html","./src/app/pages/contact-edit/contact-edit.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/cmps/move-list/move-list.component.html","./src/app/cmps/move-list/move-list.component.ts","./src/app/cmps/contact-list/contact-list.component.html","./src/app/cmps/contact-list/contact-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/cmps/contact-filter/contact-filter.component.ts","./src/app/cmps/contact-filter/contact-filter.component.html","./src/app/pages/contact-app/contact-app.component.ts","./src/app/pages/contact-app/contact-app.component.html","./src/app/app.module.ts","./src/app/services/contact-resolver.service.ts","./src/app/cmps/move-preview/move-preview.component.html","./src/app/cmps/move-preview/move-preview.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/signup/signup.component.ts","./src/app/cmps/chart/chart.component.ts","./src/app/cmps/chart/chart.component.html","./src/app/services/user.service.ts","./src/app/cmps/transfer-fund/transfer-fund.component.ts","./src/app/cmps/transfer-fund/transfer-fund.component.html","./src/app/cmps/app-header/app-header.component.ts","./src/app/cmps/app-header/app-header.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { storageService } from './storage.service.js';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BitcoinService {\r\n    Rate_KEY = 'RateDB';\r\n    Market_Price_KEY = 'MarketPriceDB';\r\n    Confirmed_Transactions_KEY = 'ConfirmedTransactionsDB';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    async getRate(coins) {\r\n        let rate = storageService.load(this.Rate_KEY);\r\n        if (rate) return of(rate);\r\n\r\n        return this.http.get<any>('https://blockchain.info/tobtc?currency=USD&value=1')\r\n            .pipe(\r\n                map(res => {\r\n                    const rate = coins * res;\r\n                    storageService.store(this.Rate_KEY, rate.toFixed(6));\r\n                    return rate\r\n                })\r\n            )\r\n    }\r\n\r\n    getMarketPrice() {\r\n        const marketPrice = storageService.load(this.Market_Price_KEY)\r\n        if (marketPrice && marketPrice?.length) return of(marketPrice)\r\n        return this.http.get<any>('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true')\r\n            .pipe(\r\n                map(res => res.values.map(\r\n                    ({ x, y }) => {\r\n                        return [(new Date(x * 1000).toLocaleDateString(['ban', 'id'])), y]\r\n                    }\r\n                )),\r\n                tap(values => storageService.store(this.Market_Price_KEY, values))\r\n            )\r\n    }\r\n\r\n    getConfirmedTransactions(){\r\n        const confirmedTransactions = storageService.load(this.Confirmed_Transactions_KEY)\r\n        if (confirmedTransactions && confirmedTransactions?.length) return of(confirmedTransactions)\r\n        return this.http.get<any>('https://api.blockchain.info/charts/transactions-per-second?timespan=5weeks&rollingAverage=8hours&format=json&cors=true')\r\n            .pipe(\r\n                map(res => res.values.map(\r\n                    ({ x, y }) => {\r\n                        return [(new Date(x * 1000).toLocaleDateString(['ban', 'id'])), y]\r\n                    }\r\n                )),\r\n                tap(values => storageService.store(this.Confirmed_Transactions_KEY, values))\r\n            )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy  } from '@angular/core';\nimport { Contact } from '../../models/contact.model';\n\n@Component({\n  selector: 'contact-preview',\n  templateUrl: './contact-preview.component.html',\n  styleUrls: ['./contact-preview.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactPreviewComponent implements OnInit {\n  @Input() contact: Contact\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<article class=\"contact-preview flex main-content\">\n    <img [src]=\"'https://i.pravatar.cc/150?u=' + contact._id\" alt=\"contact\" />\n    <h4>{{contact.name}}</h4>\n</article>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Contact } from '../models/contact.model';\nimport { httpService } from './http.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  private _contacts$ = new BehaviorSubject<Contact[]>([])\n  public contacts$ = this._contacts$.asObservable()\n\n  private _filterBy$ = new BehaviorSubject({ term: '' })\n  public filterBy$ = this._filterBy$.asObservable()\n\n  constructor() { }\n\n  public async query(): Promise<void> {\n    const filterBy = this._filterBy$.getValue()\n    let queryStr = !filterBy ? '' : `?term=${filterBy.term}`;\n    const contacts = await httpService.get(`contact${queryStr}`);\n    this._contacts$.next(this._sort(contacts))\n  }\n\n  public setFilter(filterBy) {\n    this._filterBy$.next(filterBy)\n    this.query()\n  }\n\n  public getEmptyContact() {\n    return { name: '', email: '', phone: '' }\n  }\n\n  public async getById(id: string): Promise<Observable<Contact>> {\n    const contact = await httpService.get(`contact/${id}`);\n    return contact\n  }\n\n  public async remove(id: string) {\n    await httpService.delete(`contact/${id}`);\n    return this._contacts$.subscribe(contacts => {\n      contacts = contacts.filter(contact => contact._id !== id)\n    })\n  }\n\n  public async save(contact: Contact) {\n    const savedContact = contact._id ?\n      await httpService.put(`contact/${contact._id}`, contact) :\n      await httpService.post(`contact/`, contact)\n    return savedContact\n  }\n\n  private _sort(contacts: Contact[]): Contact[] {\n    return contacts.sort((a, b) => {\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n        return -1;\n      }\n      \n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n        return 1;\n      }\n\n      return 0;\n    })\n  }\n}","import Axios from 'axios'\r\n// import {router} from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n// const BASE_URL = '/api/'\r\n\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        // if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        // }\r\n        throw err\r\n    }\r\n}","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.scss']\n})\nexport class ContactDetailsComponent implements OnInit {\n  loggedinUser: User\n  contact\n  movesForContact\n  subscription: Subscription\n\n  constructor(\n    private userService: UserService, \n    private route: ActivatedRoute, \n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      this.contact = data.contact\n    })\n\n    this.loggedinUser = this.userService.getLoggedInUser()\n    if (!this.loggedinUser) return this.movesForContact = null\n    this.movesForContact = this.loggedinUser.moves.filter(move => move.toId === this.route.snapshot.params.id)\n  }\n\n  async onTransfer(ev) {\n    await this.userService.addMove(this.contact, ev.target.amount.value)\n    ev.target.amount.value = null\n    this.router.navigateByUrl('/')\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n  }\n\n}\n","<section class=\"contact-details flex-col\">\n    <div class=\"actions main-content flex-between\">\n        <a routerLink=\"/contact\"><img src=\"../../../assets/img/back.png\" alt=\"\"></a>\n        <a [routerLink]=\"['/edit',contact._id]\"><img src=\"../../../assets/img/edit.png\" alt=\"\"></a>\n    </div>\n    <img [src]=\"'https://i.pravatar.cc/150?u=' + contact._id\" alt=\"contact\" />\n    <h3>{{contact.name}}</h3>\n    <p>Email: {{contact.email}}</p>\n    <p>Phone: {{contact.phone}}</p>\n    <transfer-fund [contact]=\"contact\" (onTransfer)=\"onTransfer($event)\"></transfer-fund>\n    <move-list [moves]=\"movesForContact\" [isShowTo]=\"false\"></move-list>\n</section>","function store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { BitcoinService } from 'src/app/services/bitcoin.service';\n\n@Component({\n  selector: 'statistic-page',\n  templateUrl: './statistic-page.component.html',\n  styleUrls: ['./statistic-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StatisticPageComponent implements OnInit {\n  marketPrice\n  confirmedTransactions\n\n  constructor(private bitcoinService: BitcoinService) { }\n\n  ngOnInit(): void {\n    this.marketPrice = this.bitcoinService.getMarketPrice()\n    this.confirmedTransactions = this.bitcoinService.getConfirmedTransactions()\n  }\n}\n","<section class=\"statistic-page\">\n    <chart [data]=\"marketPrice\" [title]=\"'Market price'\" [vTitle]=\"'Price [$]'\"></chart>\n    <chart [data]=\"confirmedTransactions\" [title]=\"'Confirmed transactions'\" [vTitle]=\"'Transactions [$]'\"></chart>\n</section>\n","<section class=\"contact-edit\">\n    <div class=\"actions main-layout flex-between\">\n        <a routerLink=\"/contact\"><img src=\"../../../assets/img/back.png\" alt=\"\"></a>\n        <button *ngIf=\"contact._id\" (click)=\"onRemoveContact()\"><img src=\"../../../assets/img/delete.png\" alt=\"\" /></button>\n    </div>\n    <h1 *ngIf=\"contact._id\">Edit contact</h1>\n    <h1 *ngIf=\"!contact._id\">Add contact</h1>\n    <form (submit)=\"onSaveContact()\">\n        <div>\n            <label for=\"name\">Name:</label>\n            <input required type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"contact.name\" />\n        </div>\n        <div>\n            <label for=\"email\">Email:</label>\n            <input required type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"contact.email\" />\n        </div>\n        <div>\n            <label for=\"phone\">Phone:</label>\n            <input required type=\"text\" id=\"phone\" name=\"phone\" [(ngModel)]=\"contact.phone\" />\n        </div>\n        <button class=\"btn save-btn\">Save</button>\n    </form>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of, Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { Contact } from 'src/app/models/contact.model';\nimport { ContactService } from 'src/app/services/contact.service';\n\n@Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.scss']\n})\nexport class ContactEditComponent implements OnInit {\n  contact\n  subscription: Subscription\n\n  constructor(\n    private contactService: ContactService, \n    private route: ActivatedRoute,  \n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      if (!Object.keys(data).length) {\n        this.contact = this.contactService.getEmptyContact()\n      } else {\n        this.contact = data.contact\n      }\n    })\n  }\n\n  async onSaveContact() {\n    await this.contactService.save(this.contact)\n    this.router.navigateByUrl('/contact')\n  }\n\n  async onRemoveContact() {\n    await this.contactService.remove(this.contact._id)\n    this.router.navigateByUrl('/contact')\n  }\n}\n","<section class=\"home-page\">\n    <div *ngIf=\"loggedinUser\" class=\"user-container flex-col\">\n        <h2>Hello {{loggedinUser.name}}!</h2>\n        <div class=\"coins flex-center\">\n            <img src=\"../../../assets/img/coins.png\" alt=\"\" />\n            <div>Coins: ${{loggedinUser.coins}}</div>\n        </div>\n        <div class=\"btc flex-center\">\n            <img src=\"../../../assets/img/bitcoin.png\" alt=\"\" />\n            <div>BTC: {{rate$ | async}}</div>\n        </div>\n        <move-list [moves]=\"loggedinUser.moves\" [isShowTo]=\"true\"></move-list>\n    </div>\n    <div *ngIf=\"!loggedinUser\" class=\"home-page-init flex\">\n        <div class=\"content\">\n            <h1>Your gateway to Bitcoin & beyond</h1>\n            <p>The tools and information you need to buy, sell, trade, invest, and spend cryptocurrencies</p>\n            <div class=\"signup-btn\">\n                <a routerLink=\"/signup\" class=\"btn\">Try Now</a>\n            </div>\n        </div>\n        <img class=\"homepage-svg\" src=\"../../../assets/img/homepage.svg\" alt=\"\" />\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { User } from '../../models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { BitcoinService } from 'src/app/services/bitcoin.service';\n\n@Component({\n  selector: 'home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n  loggedinUser: User\n  rate$: Observable<string>\n  subscription: Subscription\n\n  constructor(private userService: UserService, private bitcoinService: BitcoinService) { }\n\n  async ngOnInit(): Promise<void> {\n    this.loggedinUser = this.userService.getLoggedInUser()\n    if (this.loggedinUser) this.rate$ = await this.bitcoinService.getRate(this.loggedinUser.coins)    \n  }\n}\n","<div class=\"moves-list flex-col main-content\">\n    <h3>Your last moves:</h3>\n    <div *ngFor=\"let move of moves;\">\n        <move-preview [move]=\"move\" [isShowTo]=\"isShowTo\"></move-preview>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'move-list',\n  templateUrl: './move-list.component.html',\n  styleUrls: ['./move-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MoveListComponent implements OnInit {\n  @Input() moves: Array<object>\n  @Input() isShowTo: boolean\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"contact-list flex-col main-layout\">\n    <a *ngFor=\"let contact of contacts;\" [trackBy]=\"trackByFn\" [routerLink]=\"['/contact',contact._id]\">\n        <contact-preview [contact]=\"contact\"></contact-preview>\n    </a>\n</section>","import { Component, OnInit, EventEmitter, Input, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Contact } from '../../models/contact.model';\n\n@Component({\n  selector: 'contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactListComponent implements OnInit {\n  @Input() contacts: Contact[]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  trackByFn(contact: Contact) {\n    return contact._id\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-bitcoin';\n}\n","<main>\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ContactService } from '../../services/contact.service';\n\n@Component({\n  selector: 'contact-filter',\n  templateUrl: './contact-filter.component.html',\n  styleUrls: ['./contact-filter.component.scss']\n})\nexport class ContactFilterComponent implements OnInit {\n  public filterBy\n  private subscription: Subscription\n\n  constructor(private contactService: ContactService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.contactService.filterBy$.subscribe(filterBy => {\n      this.filterBy = filterBy\n    })\n  }\n\n  onSetFilter() {\n    this.contactService.setFilter(this.filterBy)\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n  }\n\n}\n","<form class=\"contact-filter main-layout\">\n    <input type=\"text\" name=\"term\" placeholder=\"Search\" [(ngModel)]=\"filterBy.term\" (ngModelChange)=\"onSetFilter()\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Contact } from '../../models/contact.model';\nimport { ContactService } from '../../services/contact.service';\n\n@Component({\n  selector: 'contact-app',\n  templateUrl: './contact-app.component.html',\n  styleUrls: ['./contact-app.component.scss']\n})\nexport class ContactAppComponent implements OnInit {\n\n  contacts$: Observable<Contact[]>\n\n  constructor(private contactService: ContactService) { }\n\n  ngOnInit(): void {\n    this.contactService.query()\n    this.contacts$ = this.contactService.contacts$\n  }\n}","<section class=\"contact-app\">\n  <contact-filter></contact-filter>\n  <contact-list [contacts]=\"contacts$|async\"></contact-list>\n  <a routerLink=\"/edit\" class=\"btn\">Add Contact</a>\n\n  <router-outlet></router-outlet>\n</section>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ContactFilterComponent } from './cmps/contact-filter/contact-filter.component';\nimport { ContactListComponent } from './cmps/contact-list/contact-list.component';\nimport { ContactPreviewComponent } from './cmps/contact-preview/contact-preview.component';\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component';\nimport { ContactEditComponent } from './pages/contact-edit/contact-edit.component';\nimport { ContactAppComponent } from './pages/contact-app/contact-app.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { AppHeaderComponent } from './cmps/app-header/app-header.component';\nimport { StatisticPageComponent } from './pages/statistic-page/statistic-page.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { TransferFundComponent } from './cmps/transfer-fund/transfer-fund.component';\nimport { MoveListComponent } from './cmps/move-list/move-list.component';\nimport { MovePreviewComponent } from './cmps/move-preview/move-preview.component';\nimport { ChartComponent } from './cmps/chart/chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactFilterComponent,\n    ContactListComponent,\n    ContactPreviewComponent,\n    ContactDetailsComponent,\n    ContactEditComponent,\n    ContactAppComponent,\n    HomePageComponent,\n    AppHeaderComponent,\n    StatisticPageComponent,\n    SignupComponent,\n    TransferFundComponent,\n    MoveListComponent,\n    MovePreviewComponent,\n    ChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    GoogleChartsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { ContactService } from './contact.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactResolverService implements Resolve<any>{\n\n  constructor(private contactService: ContactService) { }\n  \n  async resolve(route: ActivatedRouteSnapshot){\n    const {id} = route.params    \n    const contact = await this.contactService.getById(id)\n    return contact\n\n  }\n}\n","<article *ngIf=\"move\" class=\"move-preview\">\n    <p *ngIf=\"isShowTo\">To: {{move.to}}</p>\n    <p>At: {{move.at | date:'short' }}</p>\n    <p>Amount: ${{move.amount}}</p>\n</article>","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'move-preview',\n  templateUrl: './move-preview.component.html',\n  styleUrls: ['./move-preview.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MovePreviewComponent implements OnInit {\n  @Input() move: object\n  @Input() isShowTo: boolean\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"sign-up\">\n    <div *ngIf=\"!loggedinUser\">\n        <form *ngIf=\"isLogin\" class=\"login\" (submit)=\"onLogin()\">\n            <label for=\"email\">Enter your email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"loginCred.email\" required />\n            <label for=\"password\">Enter your password:</label>\n            <input type=\"text\" id=\"password\" name=\"password\" [(ngModel)]=\"loginCred.password\" required />\n            <button class=\"btn\">Login</button>\n        </form>\n        <button *ngIf=\"isLogin\" class=\"btn\" (click)=\"isLogin=false\">For Sign Up</button>\n        <form *ngIf=\"!isLogin\" class=\"sign-up\" (submit)=\"onSignup()\">\n            <label for=\"name\">Enter your full name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"singupCred.name\" required />\n            <label for=\"email\">Enter your email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"singupCred.email\" required />\n            <label for=\"password\">Enter your password:</label>\n            <input type=\"text\" id=\"password\" name=\"password\" [(ngModel)]=\"singupCred.password\" required />\n            <button class=\"btn\">Sing up</button>\n        </form>\n        <button *ngIf=\"!isLogin\" class=\"btn\" (click)=\"isLogin=true\">For Login</button>\n    </div>\n    <div *ngIf=\"loggedinUser\" class=\"logout\">\n        <h2>Hi! {{loggedinUser.name}}</h2>\n        <button class=\"btn\" (click)=\"onLogout()\">Logout</button>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  loginCred: object = {email: 'guest@gmail.com', password: 'guest'}\n  singupCred: object = this.userService.getEmptySingUpCred()\n  loggedinUser: object = this.userService.getLoggedInUser()\n  isLogin: boolean = true\n\n  constructor(public userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  async onLogin() {\n    await this.userService.login(this.loginCred)\n    this.router.navigateByUrl('/')\n  }\n\n  async onSignup() {\n    await this.userService.signup(this.singupCred)\n    this.router.navigateByUrl('/')\n  }\n\n  onLogout() {\n    this.userService.logout()\n    this.loggedinUser = null\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChartComponent implements OnInit {\n  @Input() title\n  @Input() data\n  @Input() columnNames\n  @Input() vTitle\n\n  options = {\n    colors: ['#8dd6e9'],\n    backgroundColor: 'transparent',\n    hAxis: {\n      title: 'Date'\n    },\n    vAxis: {\n      title: ''\n    },\n    legend: 'left'\n  }\n  type = 'AreaChart'\n  width = screen.width * 0.95\n  height = screen.width * 0.4\n  constructor() { }\n\n  ngOnInit(): void {\n    this.options.vAxis.title = this.vTitle\n  }\n\n}\n","<section class=\"chart\">\n    <h2 class=\"chart-headline\">{{ title }}</h2>\n    <google-chart \n        class=\"chart\" \n        [type]=\"type\"\n        [data]=\"data | async\" \n        [width]=\"width\" \n        [height]=\"height\"\n        [options]=\"options\" \n    >\n    </google-chart>\n</section>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Move } from '../models/move.model';\r\nimport { User } from '../models/user.model';\r\nimport { httpService } from './http.service';\r\n\r\n// const USERS = [\r\n//     {\r\n//         name: 'Puki Ben David',\r\n//         email: 'puki@gmail.com',\r\n//         password: '1234',\r\n//         coins: 100,\r\n//         moves: [\r\n//             {\r\n//                 toId: '5a56640269f443a5d64b32ca',\r\n//                 to: 'Ochoa Hyde',\r\n//                 at: 1618056214923,\r\n//                 amount: 20\r\n//             },\r\n//             {\r\n//                 amount: 5,\r\n//                 at: 1619355164509,\r\n//                 to: \"Dominique Soto\",\r\n//                 toId: \"5a566402abce24c6bfe4699d\"\r\n//             },\r\n//             {\r\n//                 amount: 10,\r\n//                 at: 1619355991441,\r\n//                 to: \"Faulkner Flores\",\r\n//                 toId: \"5a566402f90ae30e97f990db\" \r\n//             }\r\n//         ]\r\n//     }\r\n// ]\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    private _users$ = new BehaviorSubject<User[]>([])\r\n    public users$ = this._users$.asObservable()\r\n\r\n    public async query(): Promise<void> {\r\n        const users = await httpService.get(`user`);\r\n        this._users$.next(users)\r\n    }\r\n\r\n    public async login(loginCred) {\r\n        const user = await httpService.post('auth/login', loginCred)\r\n        if (user) return this._saveLocalUser(user)\r\n    }\r\n\r\n    public async logout(): Promise<void> {\r\n        sessionStorage.clear()\r\n        return await httpService.post('auth/logout')\r\n    }\r\n\r\n    public async signup(signupCred) {\r\n        const user = await httpService.post('auth/signup', signupCred)\r\n        return this._saveLocalUser(user)\r\n    }\r\n\r\n    public getEmptySingUpCred() {\r\n        return {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            coins: 100,\r\n            moves: []\r\n        }\r\n    }\r\n\r\n    public async addMove(contact, amount) {\r\n        let user = {...this.getLoggedInUser()};\r\n        amount = parseInt(amount)\r\n\r\n        if (user.coins >= amount) {\r\n            const move: Move = { toId: contact._id, to: contact.name, at: Date.now(), amount }\r\n            user.moves = [...user.moves, move]\r\n            user.coins -= amount\r\n            user = await httpService.put(`user/${user._id}`, user)\r\n            if (this.getLoggedInUser()._id === user._id) this._saveLocalUser(user)\r\n        }\r\n    }\r\n\r\n    public getLoggedInUser() {\r\n        return JSON.parse(sessionStorage.getItem(('loggedinUser') || 'null'))\r\n    }\r\n\r\n    private _saveLocalUser(user) {\r\n        sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n        return user\r\n    }\r\n}","import { Component, Input, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Contact } from 'src/app/models/contact.model';\n\n@Component({\n  selector: 'transfer-fund',\n  templateUrl: './transfer-fund.component.html',\n  styleUrls: ['./transfer-fund.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TransferFundComponent implements OnInit {\n  @Input() contact: Contact\n  @Output() onTransfer = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<section class=\"transfer-fund main-content\">\n    <h3>Transfer coins to {{contact.name}}:</h3>\n    <form (submit)=\"onTransfer.emit($event)\">\n        <label for=\"amount\">Amount:</label>\n        <input type=\"number\" id=\"amount\" name=\"amount\" />\n        <button class=\"btn\">Transfer</button>\n    </form>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html',\n  styleUrls: ['./app-header.component.scss']\n})\nexport class AppHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <nav class=\"flex-center\">\n        <a routerLink=\"\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\"><img src=\"../../../assets/img/home.png\" alt=\"\"></a>\n        <a routerLink=\"/signup\" routerLinkActive=\"active\"><img src=\"../../../assets/img/add-user.png\" alt=\"\"></a>\n        <a routerLink=\"/contact\" routerLinkActive=\"active\"><img src=\"../../../assets/img/users.png\" alt=\"\"></a>\n        <a routerLink=\"/statistic\" routerLinkActive=\"active\"><img src=\"../../../assets/img/increase.png\" alt=\"\"></a>\n    </nav>\n</header>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContactAppComponent } from './pages/contact-app/contact-app.component';\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component';\nimport { ContactEditComponent } from './pages/contact-edit/contact-edit.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { StatisticPageComponent } from './pages/statistic-page/statistic-page.component';\nimport { ContactResolverService } from './services/contact-resolver.service';\n\nconst routes: Routes = [\n  { path: 'contact/:id', component: ContactDetailsComponent, resolve: {contact: ContactResolverService}},\n  { path: 'edit/:id', component: ContactEditComponent , resolve: {contact: ContactResolverService}},\n  { path: 'contact', component: ContactAppComponent},\n  { path: 'edit', component: ContactEditComponent},\n  { path: 'statistic', component: StatisticPageComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: '', component: HomePageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}